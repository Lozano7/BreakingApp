{"version":3,"sources":["components/Quote.js","App.js","hooks/useFetch.js","index.js"],"names":["Quote","quote","text","author","initialQuote","url","getData","setQuote","a","fetch","response","ok","Error","statusText","json","data","newQuote","console","log","error","App","useState","setData","setError","useEffect","status","result","useFetch","className","src","alt","onClick","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAceA,EAZD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,mCACE,8BACGA,EAAMC,KACP,uBACA,+BAAOD,EAAME,eCJrB,IAAMC,EAAe,CACnBF,KAAM,GACNC,OAAQ,IAENE,EAAM,8CAEJC,EAAO,uCAAG,WAAOD,EAAKE,GAAZ,mBAAAC,EAAA,+EAESC,MAAMJ,GAFf,WAERK,EAFQ,QAIEC,GAJF,sBAIY,IAAIC,MAAMF,EAASG,YAAc,OAJ7C,uBAMKH,EAASI,OANd,OAMRC,EANQ,OAONC,EAPM,2BAQPZ,GARO,IASVF,KAAMa,EAAK,GAAGd,MACdE,OAAQY,EAAK,GAAGZ,SAElBI,EAASS,GACTC,QAAQC,IAAIF,GAbA,kDAeZC,QAAQE,MAAR,MAfY,0DAAH,wDAoDEC,MAjCf,WACE,MC5BF,SAAkBf,GAChB,MAAwBgB,mBAAS,MAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA0BD,mBAAS,MAAnC,mBAAOF,EAAP,KAAcI,EAAd,KA2BA,OAzBAC,qBAAU,WACR,IAAMlB,EAAO,uCAAG,WAAOD,GAAP,iBAAAG,EAAA,+EAESC,MAAMJ,GAFf,WAERK,EAFQ,QAIEC,GAJF,qBAKJ,CACJQ,OAAO,EACPM,OAAQf,EAASe,OACjBZ,WAAaH,EAASG,WAElBH,EAASG,WADT,oBATI,uBAcOH,EAASI,OAdhB,OAcRY,EAdQ,OAeZJ,EAAQI,GACRH,GAAS,GAhBG,kDAkBZD,EAAQ,MACRC,EAAS,EAAD,IAnBI,0DAAH,sDAsBbjB,EAAQD,KACP,CAACA,IACG,CAAEU,OAAMI,SDDAQ,CAAStB,GAAlBU,EAAN,EAAMA,KACN,EAA0BM,mBAASjB,GAAnC,mBAAOH,EAAP,KAAcM,EAAd,KAaA,OAXAiB,qBAAU,WACR,GAAIT,EAAM,CACR,IAAMC,EAAQ,2BACTZ,GADS,IAEZF,KAAMa,EAAK,GAAGd,MACdE,OAAQY,EAAK,GAAGZ,SAElBI,EAASS,MAEV,CAACD,IAGF,sBAAKa,UAAU,MAAf,UACE,qBACEC,IAAI,4EACJC,IAAI,SAEN,wBACEC,QAAS,SAACC,GACR1B,EAAQD,EAAKE,IAFjB,yBAOA,cAAC,EAAD,CAAON,MAAOA,QEpDpBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf1797b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Quote = ({ quote }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {quote.text}\r\n        <br />\r\n        <span>{quote.author}</span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Quote from './components/Quote';\r\nimport { useFetch } from './hooks/useFetch';\r\n\r\nconst initialQuote = {\r\n  text: '',\r\n  author: '',\r\n};\r\nlet url = 'https://breakingbadapi.com/api/quote/random';\r\n\r\nconst getData = async (url, setQuote) => {\r\n  try {\r\n    let response = await fetch(url);\r\n\r\n    if (!response.ok) throw new Error(response.statusText || '404');\r\n\r\n    let data = await response.json();\r\n    const newQuote = {\r\n      ...initialQuote,\r\n      text: data[0].quote,\r\n      author: data[0].author,\r\n    };\r\n    setQuote(newQuote);\r\n    console.log(newQuote);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  let { data } = useFetch(url);\r\n  const [quote, setQuote] = useState(initialQuote);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const newQuote = {\r\n        ...initialQuote,\r\n        text: data[0].quote,\r\n        author: data[0].author,\r\n      };\r\n      setQuote(newQuote);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className='app'>\r\n      <img\r\n        src='https://upload.wikimedia.org/wikipedia/commons/7/77/Breaking_Bad_logo.svg'\r\n        alt='logo'\r\n      />\r\n      <button\r\n        onClick={(e) => {\r\n          getData(url, setQuote);\r\n        }}\r\n      >\r\n        Get Another\r\n      </button>\r\n      <Quote quote={quote} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async (url) => {\r\n      try {\r\n        let response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n          throw {\r\n            error: true,\r\n            status: response.status,\r\n            statusText: !response.statusText\r\n              ? 'Ocurrio un error'\r\n              : response.statusText,\r\n          };\r\n        }\r\n\r\n        let result = await response.json();\r\n        setData(result);\r\n        setError(false);\r\n      } catch (err) {\r\n        setData(null);\r\n        setError(err);\r\n      }\r\n    };\r\n    getData(url);\r\n  }, [url]);\r\n  return { data, error };\r\n}\r\nexport { useFetch };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}